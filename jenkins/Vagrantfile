# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.define "jenkins-ci"
  config.vm.box = "ubuntu/trusty64"
  config.ssh.forward_agent = true
  config.vm.network "public_network", ip: "192.168.2.200"
  config.vm.hostname = "jenkins-ci"
  config.vm.provider :virtualbox do |vb|
    vb.memory = "3072"
    vb.cpus = "1"
    vb.name = "jenkins-ci"
  end 
  config.vm.provision "file", source: "~/.ssh/id_rsa_virtualbox", destination: "~/.ssh/id_rsa"
  config.vm.provision "file", source: "./config/jenkins-site", destination: "~/jenkins.conf"
  config.vm.provision "file", source: "./config/artifactory-site", destination: "~/artifactory.conf"
  config.vm.provision "file", source: "./config/sonarqube-site", destination: "~/sonarqube.conf"
  config.vm.provision "shell", inline: <<-SHELL 
    sudo add-apt-repository ppa:webupd8team/java -y 
    sudo wget -q -O - https://pkg.jenkins.io/debian/jenkins-ci.org.key | sudo apt-key add -
    sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
    sudo apt -qq update
    sudo apt -qq upgrade -y --force-yes
    sudo apt install -qq -y htop
    sed -i -- 's/#set background=dark/set background=dark/g' /etc/vim/vimrc
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    echo "INSTALLING JAVA8 JDK"
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections
    echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections
    sudo apt install -y  -q oracle-java8-installer > /dev/null 2>&1
    echo 'JAVA_HOME="/usr/lib/jvm/java-8-oracle"' | sudo tee --append /etc/environment
    source /etc/environment
     
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    echo "INSTALLING JENKIS"
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    sudo apt install -qq jenkins -y --force-yes
    sudo /etc/init.d/jenkins restart
     
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    echo "INSTALLING GIT"
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    sudo apt install -qq git -y

    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    echo "INSTALLING APACHE"
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    sudo apt install -qq apache2  apache2-utils -y --force-yes
    sudo a2enmod proxy
    sudo a2enmod proxy_http
    sudo a2enmod headers
    sudo a2dissite 000-default
    sudo sudo mv /home/vagrant/jenkins.conf /etc/apache2/sites-available/jenkins.conf
    sudo a2ensite jenkins.conf
    sudo service apache2 reload


    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    echo "INSTALLING MAVEN"
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    sudo apt install -qq maven -y --force-yes
    echo 'M2_HOME="/usr/share/maven"' | sudo tee --append /etc/environment
    echo 'M2="$M2_HOME/bin"' | sudo tee --append /etc/environment
    echo 'MAVEN_OPTS="-Xms256m -Xmx512m"' | sudo tee --append /etc/environment
    source /etc/environment
     
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    echo "INSTALLING SonarQue"
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    wget https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-6.1.zip
    unzip  sonarqube-6.1.zip
    mv sonarqube-6.1 /opt/sonarqube
    wget http://downloads.sonarsource.com/plugins/org/codehaus/sonar-plugins/sonar-build-breaker-plugin/1.1/sonar-build-breaker-plugin-1.1.jar
    mv sonar-build-breaker-plugin-1.1.jar /opt/sonarqube/extensions/plugins/
    wget https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-2.8.zip
    unzip sonar-scanner-2.8.zip
    mv sonar-scanner-2.8 /opt/sonarqube/
    sudo ln -s /opt/sonarqube/sonar-scanner-2.8/bin/sonar-scanner /usr/local/bin/sonar-scanner
    sudo ln -s /opt/sonarqube/sonar-scanner-2.8/bin/sonar-runner /usr/local/bin/sonar-runner
    sudo ln -s /opt/sonarqube/sonar-scanner-2.8/bin/sonar-scanner-debug /usr/local/bin/sonar-scanner-debug
    echo 'SONAR_HOME="/opt/sonarqube"' | sudo tee --append /etc/environment
    echo 'SONAR_RUNNER_HOME="/opt/sonarqube/sonar-scanner-2.8"' | sudo tee --append /etc/environment
    source /etc/environment
    cd /etc/init.d/
    sudo ln -s  /opt/sonarqube/bin/linux-x86-64/sonar.sh .
    sudo update-rc.d sonar.sh defaults
    sudo mv  /home/vagrant/sonarqube.conf /etc/apache2/sites-available/sonarqube.conf
    sudo a2ensite sonarqube.conf
    sudo service apache2 reload
    
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    echo "INSTALLING Jfrog Artifactory"
    echo "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
    wget https://bintray.com/jfrog/artifactory/download_file?file_path=jfrog-artifactory-oss-4.16.0.zip -O jfrog.zip
    unzip jfrog.zip
    sudo mv artifactory-oss-4.16.0 /opt/artifactory
    sudo sh /opt/artifactory/bin/installService.sh
    echo 'ARTIFACTORY_HOME="/opt/artifactory"' | sudo tee --append /etc/environment
    sudo mv  /home/vagrant/artifactory.conf /etc/apache2/sites-available/artifactory.conf
    sudo a2ensite artifactory.conf
    sudo service apache2 reload

 SHELL
end
